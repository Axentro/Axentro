name: Linux CI

on:
  push:
    branches:
      - master
    tags:
      - '*'

  pull_request:
    branches:
      - master

  schedule:
    - cron: "0 6 * * 1"

jobs:
  specs:
    name: Specs
    runs-on: ubuntu-latest
    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install shards
        run: shards install --ignore-crystal-version

      - name: Run specs
        run: crystal spec --error-on-warnings --error-trace

  check-format:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Check sources format
        run: crystal tool format --check

  ameba:
    name: Ameba linter
    runs-on: ubuntu-latest
    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install shards
        run: shards install --ignore-crystal-version

      - name: Run ameba
        run: bin/ameba

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [specs, check-format, ameba]
    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install shards
        run: shards install --ignore-crystal-version

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
  
      - name: Build axen binary
        run: |
          mkdir build
          docker-compose run --rm app apk add sqlite sqlite-dev sqlite-static && crystal build src/cli/axen.cr -o build/axen-${GITHUB_REF_SLUG}-linux --release --no-debug --static  
          docker-compose run --rm app apk add sqlite sqlite-dev sqlite-static && crystal build src/cli/axe.cr -o build/axe-${GITHUB_REF_SLUG}-linux --release --no-debug --static   

      - name: Upload to S3
        uses: shallwefootball/upload-s3-action@v1.1.2
        if: github.ref == 'refs/heads/master'
        with:
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_FOR_CI_S3 }}
          aws_bucket: ${{ secrets.AWS_BUCKET_FOR_CI_S3 }}
          aws_key_id: ${{ secrets.AWS_KEY_FOR_CI_S3 }}
          source_dir: build
          destination_dir: ""

      - name: Upload to GitHub Releases
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: build/*
          overwrite: true
          file_glob: true               